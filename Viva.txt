It seems like you're interested in various topics related to software architecture, load balancing, socket programming, and web services. Let's briefly address each of your points:

1. **Open Style Architecture**:
   An "open architecture" generally refers to a system or software design that is extensible, flexible, and allows for interoperability with other systems. Open architecture systems often have well-defined APIs that enable third-party developers to extend or enhance the system's functionality.

2. **Load Balancing**:
   Load balancing is the process of distributing network traffic or application workload across multiple servers to ensure efficient resource utilization, maximize throughput, minimize response time, and avoid overloading any single server. It's commonly used to improve the availability and scalability of web services.

3. **Algorithm of Load Balancing**:
   Load balancing algorithms include Round Robin, Least Connections, Weighted Round Robin, and Weighted Least Connections, among others. These algorithms determine how incoming requests are distributed to server instances in a load balancer.

4. **Testing Types**:
   Various types of software testing include Unit Testing, Integration Testing, Functional Testing, Performance Testing, Security Testing, and User Acceptance Testing (UAT), among others. The choice of testing type depends on the specific requirements of the project.

5. **Core New Socket vs. HTTPS**:
   Core new sockets and HTTPS serve different purposes. Core new sockets provide low-level network communication, while HTTPS is a secure protocol used for transmitting data over the web. The choice between them depends on your specific use case; if security and web-based communication are essential, HTTPS is the better choice.

6. **Bind in Socket Programming**:
   In socket programming, "bind" is used to associate a socket with a specific IP address and port number on the local machine. It's a necessary step before you can listen or establish connections on that socket.

7. **RMI (Remote Method Invocation) - Lookup and Bind**:
   In Java, RMI is a mechanism that allows an object to invoke methods on an object running in another JVM. "Lookup" is used to find a remote object, and "bind" is used to register or bind a name to a remote object in the RMI registry.

8. **Web Service**:
   A web service is a software system designed to allow different machines to communicate over a network using standardized protocols. It provides a way for various applications to interact with each other over the internet. An example is a weather forecast service that provides data to multiple mobile apps and websites.

9. **Architecture Style/Pattern**:
   There are many architecture styles and patterns, including the Client-Server architecture, RESTful architecture, Microservices, and more. The choice of architecture depends on the specific requirements and constraints of the system you are designing.

If you'd like more detailed information on any of these topics or have specific questions, please feel free to ask.